services:
  backend:
    depends_on:
      - db
    build:
      context: .
      dockerfile: Dockerfile
    image: backend
    container_name: backend
    restart: always
    command: /bin/sh -c "sleep 5 &&
      venv/bin/python manage.py makemigrations --noinput &&
      venv/bin/python manage.py migrate --noinput && 
      venv/bin/python manage.py collectstatic --noinput &&
      venv/bin/daphne -b 0.0.0.0 -p 80 pong.asgi:application"
    volumes:
      - pong:/transcendence/pong
    ports:
      - "80:80"
    networks:
      - app-network
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
        #healthcheck:
        #test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
        #interval: 20s
        #timeout: 5s
        #retries: 5

  db:
    image: postgres:latest
    container_name: postgres
    restart: always
    volumes:
      - pong_pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - pong_logstash_data_01:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=es01
      - cluster.name=${CLUSTER_NAME}
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    mem_limit: ${ES_MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1

  logstash01:
    depends_on:
      - es01
      - kibana
    image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
    container_name: logstash
    volumes:
      - pong_logstash_data_01:/usr/share/logstash/data/logstash.conf
    ports:
      - "5044:5044"

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: kibana
    volumes:
      - pong_kibana:/usr/share/kibana/data
      - pong_logstash_data_01:/usr/share/logstash/data
    user: root
    ports:
      - 5601:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    mem_limit: ${KB_MEM_LIMIT}
      #healthcheck:
      #test: ["CMD-SHELL", "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'"]
      #interval: 20s
      #timeout: 10s
      #retries: 120

volumes:
  pong:
    driver: local
  pong_pg_data:
    driver: local
  pong_es_data_01:
    driver: local
  pong_kibana:
    driver: local
  pong_logstash_data_01:
    driver: local

networks:
  app-network:
    driver: bridge
